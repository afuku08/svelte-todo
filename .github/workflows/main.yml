name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3

      - name: AWSにログイン
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: "arn:aws:iam::415355479792:role/fukuhara-github-actions-test"

      - name: ECRにログイン
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker イメージをビルド
        run: docker compose build

      - name: イメージにタグ付け
        run: docker tag svelte-todo-sveltekit-app ${{ secrets.ECR_REPOSITORY }}:latest

      - name: イメージをECRにpush
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:latest


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: AWSにログイン
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: "arn:aws:iam::415355479792:role/fukuhara-github-actions-test"
          
      - name: ECSタスク定義を取得
        id: task-def
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} > task-definition.json

      - name: イメージURIを取得
        id: image_uri
        run: echo "image=${{ secrets.ECR_REPOSITORY }}:latest" >> $GITHUB_OUTPUT

      - name: タスク定義を新しいイメージで更新
        id: new-task-def
        run: |
          jq --arg IMAGE "${{ secrets.ECR_REPOSITORY }}:latest" '.taskDefinition.containerDefinitions[0].image = $IMAGE' task-definition.json > new-task-def.json
          cat new-task-def.json | jq '.taskDefinition | {family, containerDefinitions, networkMode, requiresCompatibilities, cpu, memory, executionRoleArn, taskRoleArn}' > final-task-def.json

      - name: 新しいタスク定義を登録
        id: register-task-def
        run: |
          newTaskDefArn=$(aws ecs register-task-definition --cli-input-json file://final-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
          echo "taskDefArn=$newTaskDefArn" >> $GITHUB_OUTPUT

      - name: ECSサービスを更新
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --task-definition ${{ steps.register-task-def.outputs.taskDefArn }}

